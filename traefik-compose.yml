version: '2.4'

x-web-defaults: &web-defaults
  restart: unless-stopped
  build:
    context: backend
    dockerfile: 'Dockerfile'
  volumes:
    - ./backend:/app
    - ./frontend:/frontend
  depends_on:
    - redis
  environment:
    #OCTOPRINT_TUNNEL_PORT_RANGE: "15851-15855"
    EMAIL_HOST: '${EMAIL_HOST-}'
    EMAIL_HOST_USER: '${EMAIL_HOST_USER-}'
    EMAIL_HOST_PASSWORD: '${EMAIL_HOST_PASSWORD-}'
    EMAIL_PORT: '${EMAIL_PORT-587}'
    EMAIL_USE_TLS: '${EMAIL_USE_TLS-True}'
    DEFAULT_FROM_EMAIL: '${DEFAULT_FROM_EMAIL-changeme@example.com}'
    DEBUG: '${DEBUG-False}'    # Don't set DEBUG to True unless you know what you are doing. Otherwise the static files will be cached in browser until hard-refresh
    ADMIN_IP_WHITELIST: '${ADMIN_IP_WHITELIST-}'
    SITE_USES_HTTPS: '${SITE_USES_HTTPS-False}'
    SITE_IS_PUBLIC: '${SITE_IS_PUBLIC-False}'
    SOCIAL_LOGIN: '${SOCIAL_LOGIN-False}'
    REDIS_URL: '${REDIS_URL-redis://redis:6379}'
    DATABASE_URL: '${DATABASE_URL-sqlite:////app/db.sqlite3}'
    INTERNAL_MEDIA_HOST: '${INTERNAL_MEDIA_HOST-http://web:3334}'
    ML_API_HOST: '${ML_API_HOST-http://ml_api:3333}'
    ACCOUNT_ALLOW_SIGN_UP: '${ACCOUNT_ALLOW_SIGN_UP-False}'
    WEBPACK_LOADER_ENABLED: '${WEBPACK_LOADER_ENABLED-False}'
    TELEGRAM_BOT_TOKEN: '${TELEGRAM_BOT_TOKEN-}'
    TWILIO_ACCOUNT_SID: '${TWILIO_ACCOUNT_SID-}'
    TWILIO_AUTH_TOKEN: '${TWILIO_AUTH_TOKEN-}'
    TWILIO_FROM_NUMBER: '${TWILIO_FROM_NUMBER-}'
    SENTRY_DSN: '${SENTRY_DSN-}'
    PUSHOVER_APP_TOKEN: '${PUSHOVER_APP_TOKEN-}'
    SLACK_CLIENT_ID: '${SLACK_CLIENT_ID-}'
    SLACK_CLIENT_SECRET: '${SLACK_CLIENT_SECRET-}'
    DJANGO_SECRET_KEY: '${DJANGO_SECRET_KEY-}'
    VERSION:

services:
  ml_api:
    hostname: ml_api
    restart: unless-stopped
    build:
      context: ml_api
    environment:
      DEBUG: 'True'
      FLASK_APP: 'server.py'
      # ML_API_TOKEN:
    tty: true
    command: bash -c "gunicorn --bind 0.0.0.0:3333 --workers 1 wsgi"
    networks:
      - web
  web:
    <<: *web-defaults
    hostname: web
    ports:
      - "3334:3334"
    labels:
      - traefik.http.routers.web.rule=Host(`app.lishixin.net`)
      - traefik.http.routers.web.tls=true
      - traefik.http.routers.tunnels.rule=HostRegexp(`{[a-z].*}.tunnels.app.lishixin.net`)
      - traefik.http.routers.tunnels.tls=true
    depends_on:
      - ml_api
    command: sh -c 'python manage.py migrate && python manage.py collectstatic -v 2 --noinput && python manage.py runserver --nostatic --noreload 0.0.0.0:3334'
    networks:
      - web
  tasks:
    <<: *web-defaults
    hostname: tasks
    command: sh -c "celery -A config worker --beat -l info -c 2 -Q realtime,celery"
    networks:
      - web
  redis:
    restart: unless-stopped
    image: redis:5.0-alpine
    networks:
      - web
      
  traefik:
    image: traefik:v2.10
    hostname: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./cert:/cert
      - ./traefik.yml:/traefik.yml
      - ./traefik_dynamic.yml:/traefik_dynamic.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

networks:
  web:
    external: true